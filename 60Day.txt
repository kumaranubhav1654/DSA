1. Two Sum

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        map<int , int>m;
        vector<int>ans;
        for(int i=0;i!=nums.size();i++){
          
            int tmp=target-nums[i];
        if(m.find(tmp)!=m.end()){
         ans.push_back(i);
         ans.push_back(m[tmp]);
         break;
        }
          m[nums[i]]=i;
        }
        return ans;
    }
};

2.Valid Parenthesis

class Solution {
public:
    bool isValid(string s) {
        stack<char>st;
        if(s.length()%2!=0)
        return false;
        for(int i=0;i!=s.length();i++){
            if(s[i]=='(' || s[i]=='['|| s[i]=='{'){
                st.push(s[i]);
            }
            else{
                if(st.empty())
                return false;
                else if(s[i]==')' && st.top()=='('){
                    st.pop();
                }
                else if(s[i]=='}' && st.top()=='{'){
                    st.pop();
                }
                else if(s[i]==']' && st.top()=='['){
                    st.pop();
                }
                else
                return false;
            }
        }
        if(st.empty())
        return true;
        else return false;
        
    }
};

3.